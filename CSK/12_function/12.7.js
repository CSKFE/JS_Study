/* 여러가지 함수의 형태 */

/* 즉시실행함수(IIFE) */
// 즉시실행함수는 ()그룹연산자 안에 정의하며, 바로 실행되고, 다시 호출할 수 없다
// 즉시실행함수는 이름없는 익명함수로 사용하는것이 일반적이다.

(function (){
  var a = 1;
  var b = 2;
  return a + b;
}());

// 기명함수로도 선언이 가능하다
(function foo(){
  var a = 2;
  var b = 3;
  return a + b;
}());

// foo(); 
// => 호출할 수 없다(reference error foo is not defined) 이는 함수선언식의 함수명은 함수내부에서만 사용할 수 있기 때문이다.
// () 그룹연산자 내부에서의 기명함수는 함수 선언문이 아닌 함수 리터럴로 평가되기때문

//IIFE의 잘못된 선언
// IIFE는 반드시 () 그룹연산자로 감싸야한다

// function () {

// }();
// => function name 에러
// 함수선언문은 반드시 함수명을 기재해야하지만 위의 예제에서는 함수명을 기재하지않았기때문에 함수를 식별할 수 있는 식별자가 없으므로 에러

// function bar(){

// }();

// 이름을 선언했지만 에러가발생한다
// 이는 자바스크립트의 자동세미콜론기능(ASI)가 {} 코드블록이 종료되는 곳에 자동으로 세미콜론을 붙혔기때문
// function bar(){};(); 이런 형태로되어 그룹연산자 내부에 평가될 값이 없어 에러 발생

console.log(typeof (function f(){}));
console.log(typeof (function (){}));
// () 그룹연산자 내부의 피연산자는 값으로 평가되어야하는 값이기때문에 위의 예제
// 즉시실행함수를 기명,익명으로 함수선언을했을때 함수 리터럴로 평가된다.


// IIFE도 인수를 전달할 수 있고, 값을 반환할 수 있다.

var res = (function (a ,b) {
  return a + b;
}(3, 5));

console.log(res);