/* 렉시컬 스코프 */

var x = 1;

function foo() {
  var x = 10;
  bar();
}

function bar() {
  console.log(x);
}

foo();
bar();

// 위의 출력결과는 1이 두 번 출력된다
// 스코프를 결정짓는 두가지 요소
// 함수를 어디서 호출했는지에 따라 함수의 상위 스코프 결정  => 동적스코프
// 함수가 어디서 정의됐는지에 따라 함수의 상위 스코프 결정  => 렉시컬스코프

// 위의 결과를 보면 foo에서 bar를 호출하고 bar도 호출됐다.
// 함수 bar가 정의된 시점에서 변수 x는 전역으로 선언된 1의 값이 할당된 변수 x를 가리킨다.
// foo에 x가 선언되있더라도 foo가 정의된 시점에서는 x 는 1을 가리키기때문에 1이 두 번 출력된다.
// 자바스크립트는 렉시컬 스코프를 따른다
// 렉시컬 스코프를 따르므로 함수가 정의된 시점에서 스코프가 결정된다.
// 호출된 위치에서의 스코프는 아무런 영향을 끼치지 않는다.
// 함수정의가 실행될때 생성된 함수객체는 이때의 스코프를 기억한다.
// 호출될때마다 스코프를 참조할 필요가 있기때문이다.
